
- обособить нашу библиотеку
	ключевые особенности
	16 бит цвет
	для дисплеев с параллельной или последовательной шиной, у которых есть собственная память
	интерфейс доступа предполагает вывод данных в прямоугольник

	Пускай будет при варианта hardware
	- ILI9481
	- ILI9341
	- software (а пускай будет QT вариант!)

	Библиотека для преобразования фонтов в растровый вид.
	
- cконвертировать старые фонты в новый формат и отказаться от старого формата вывода фонтов --ok
- проверить на ILI9341 --ok

- утилита для конвертации картинок в нужный формат --ok

- почистить функции, где цвет задаётся как r,g,b --ok
- сделать root_menu --ok
- проверить progressbar --ok
- проверить plot --ok
- проверить utf8 text --ok
- UTF_DrawStringJustify если текст выходит за границу, то он перестаёт печататься. --ok
- сломались цифры на графике --ok

- сделать утилиту для разметки диалогов?
	Все прямоугольники подогнанны друг к другу горизонтально, либо вертикально.
	там надо всё достаточно просто делать
	горизонтальное/вертикальное разбиение
	можно высоту по фонту выставлять для строчки, либо ручками двигать
	Потом экспортируется список именованных прямоугольников.

- сделать функцию для удобной печати текста разными фонтами и float/int?
	она должна принимать ссылку на строчку и длинну строки
	печатать над и под символами прямоугольники правильного цвета



- собираем плюсы С++ для разработки под микроконтроллеры
	более строгий синтаксис
	если функция не определенна, то это ошибка
	если f(1,2) для функции определённой как void f(int x), то это ошибка
	аргументы по умолчанию

- кстати есть DMA2D с блендингом и другими плюшками, вполне реально игру сделать
	
- попробовать сделать вывод по параллельной шине через timer & dma --fail, слишком сложно, похоже надо 2 таймера и DMA использовать.
	PC8 - TIM3_CH3, TIM8_CH3
	Будем пока использовать TIM8 так как он Advanced и точно умеет DMA

	python ~/radio/stm32/tools/stm32_flash_0.py /home/balmer/radio/stm32/tmp/TestH743_USB_1/build/TestH743_USB.bin

- можно подумать про простые функции разметки сделать --ok
	- Rect - прямоугольник с int16_t xmin, ymin, width, height
	- SplitX, SplitY - Разделяем пространство по оси X/Y на 2 части
	- специальный прямоугольник с ascend линией, на которой располагается фонт
	- отрисовка текста в прямоугольнике